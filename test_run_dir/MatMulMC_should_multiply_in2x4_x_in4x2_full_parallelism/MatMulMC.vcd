$date
2024-03-01T20:58+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module MatMulMC $end
 $var wire 2 ! colBIdx $end
 $var wire 32 " matrixAInternal_0_0 $end
 $var wire 32 # matrixAInternal_0_1 $end
 $var wire 32 $ matrixAInternal_0_2 $end
 $var wire 32 % matrixBInternal_0_1 $end
 $var wire 32 & matrixAInternal_0_3 $end
 $var wire 32 ' matrixBInternal_0_0 $end
 $var wire 32 ( io_in_bits_bBlock_1 $end
 $var wire 32 ) io_in_bits_bBlock_0 $end
 $var wire 2 * colCIdx $end
 $var wire 32 + matrixBInternal_2_1 $end
 $var wire 32 , matrixBInternal_2_0 $end
 $var wire 3 - colAIdx $end
 $var wire 32 . matrixBInternal_1_1 $end
 $var wire 32 / matrixBInternal_1_0 $end
 $var wire 1 0 io_in_ready $end
 $var wire 4 1 rowAIdx $end
 $var wire 1 2 outputValid $end
 $var wire 32 3 io_in_bits_aBlock_1 $end
 $var wire 32 4 io_in_bits_aBlock_0 $end
 $var wire 2 5 colCounter $end
 $var wire 1 6 io_in_valid $end
 $var wire 64 7 product $end
 $var wire 4 8 rowBIdx $end
 $var wire 1 9 stateOutputting $end
 $var wire 3 : innerCounter $end
 $var wire 1 ; clock $end
 $var wire 64 < product_1 $end
 $var wire 3 = colAIdx_1 $end
 $var wire 2 > colIdx_1 $end
 $var wire 32 ? resultMatrix_1_1 $end
 $var wire 32 @ resultMatrix_1_0 $end
 $var wire 1 A stateLoadMatrices $end
 $var wire 1 B inputReady $end
 $var wire 2 C colIdx $end
 $var wire 32 D resultMatrix_0_1 $end
 $var wire 32 E resultMatrix_0_0 $end
 $var wire 2 F colBIdx_1 $end
 $var wire 4 G rowAIdx_1 $end
 $var wire 4 H rowBIdx_1 $end
 $var wire 4 I loadCounterA $end
 $var wire 4 J loadCounterB $end
 $var wire 3 K loadCounterC $end
 $var wire 2 L rowCounter $end
 $var wire 32 M io_outBlock_bits_0 $end
 $var wire 3 N rowCIdx $end
 $var wire 4 O currIndA_1 $end
 $var wire 1 P reset $end
 $var wire 1 Q io_outBlock_valid $end
 $var wire 4 R currIndB_1 $end
 $var wire 32 S matrixBInternal_3_1 $end
 $var wire 32 T matrixBInternal_3_0 $end
 $var wire 1 U stateMultiplying $end
 $var wire 1 V stateIdle $end
 $var wire 3 W currIndC $end
 $var wire 4 X currIndB $end
 $var wire 4 Y currIndA $end
 $var wire 32 Z matrixAInternal_1_0 $end
 $var wire 32 [ matrixAInternal_1_1 $end
 $var wire 32 \ matrixAInternal_1_2 $end
 $var wire 32 ] matrixAInternal_1_3 $end
$upscope $end
$enddefinitions $end
$dumpvars
00
b00000000000000000000000000000000 +
02
b0000000000000000000000000000000000000000000000000000000000000000 7
b00000000000000000000000000000000 ,
b0000000000000000000000000000000000000000000000000000000000000000 <
b00000000000000000000000000000000 '
b00000000000000000000000000000000 &
06
b00000000000000000000000000000000 )
b00000000000000000000000000000000 (
b00000000000000000000000000000000 #
09
b00000000000000000000000000000000 "
b00000000000000000000000000000000 %
0;
b00000000000000000000000000000000 $
b00 5
0A
0B
b00 *
b00 !
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 /
b00000000000000000000000000000000 .
0P
0Q
0U
0V
b000 W
b0000 1
b0000 8
b000 N
b0000 J
b0000 H
b000 K
b0000 I
b0000 G
b0000 R
b0000 O
b0000 X
b0000 Y
b000 :
b000 =
b00000000000000000000000000000000 M
b00000000000000000000000000000000 E
b00000000000000000000000000000000 D
b00000000000000000000000000000000 ?
b000 -
b00000000000000000000000000000000 @
b00000000000000000000000000000000 [
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 ]
b00 F
b00000000000000000000000000000000 \
b00 L
b00000000000000000000000000000000 S
b00 >
b00000000000000000000000000000000 T
b00 C
$end
#0
1P
b0001 R
b01 F
b001 =
b01 >
b0001 O
#1
10
1B
1V
1;
#6
0P
16
0;
#11
1A
0V
1;
#16
b00000000000000000000000000000010 3
b00000000000000000000000000000001 4
b00000000000000000000000000000010 (
b00000000000000000000000000000001 )
0;
#21
b00000000000000000000000000000001 "
b00000000000000000000000000000010 #
b00000000000000000000000000000010 %
b00000000000000000000000000000001 '
b0001 H
b0010 I
b0010 J
b010 -
b0011 O
b0011 R
b0000000000000000000000000000000000000000000000000000000000000001 7
b0001 8
b0010 X
b0010 Y
1;
b0000000000000000000000000000000000000000000000000000000000000010 <
b011 =
#26
b00000000000000000000000000000100 3
b00000000000000000000000000000011 4
b00000000000000000000000000000100 (
b00000000000000000000000000000011 )
0;
#31
b00000000000000000000000000000011 $
b00000000000000000000000000000100 &
b0001 G
b0010 H
b0100 I
b0100 J
b000 -
b00000000000000000000000000000100 .
b00000000000000000000000000000011 /
b0101 O
b0001 1
b0101 R
b0010 8
b0100 X
b0100 Y
1;
b001 =
#36
b00000000000000000000000000000110 3
b00000000000000000000000000000101 4
b00000000000000000000000000000110 (
b00000000000000000000000000000101 )
0;
#41
b0011 H
b0110 I
b0110 J
b00000000000000000000000000000110 +
b00000000000000000000000000000101 ,
b010 -
b0111 O
b0111 R
b0011 8
b0110 X
b0110 Y
b00000000000000000000000000000101 Z
1;
b00000000000000000000000000000110 [
b011 =
#46
b00000000000000000000000000001000 3
b00000000000000000000000000000111 4
b00000000000000000000000000001000 (
b00000000000000000000000000000111 )
0;
#51
0A
0B
b0010 G
b0100 H
b1000 I
b1000 J
b000 -
b1001 O
00
b0010 1
b1001 R
b00000000000000000000000000001000 S
b00000000000000000000000000000111 T
1U
b0100 8
b1000 X
b1000 Y
1;
b00000000000000000000000000000111 \
b001 =
b00000000000000000000000000001000 ]
#56
06
0;
#61
b00000000000000000000000000000010 D
b00000000000000000000000000000001 E
b0000000000000000000000000000000000000000000000000000000000000110 7
b001 :
1;
b0000000000000000000000000000000000000000000000000000000000001000 <
#66
0;
#71
b00000000000000000000000000001010 D
b00000000000000000000000000000111 E
b0000000000000000000000000000000000000000000000000000000000001111 7
b010 :
1;
b0000000000000000000000000000000000000000000000000000000000010010 <
#76
0;
#81
b00000000000000000000000000011100 D
b00000000000000000000000000010110 E
b0000000000000000000000000000000000000000000000000000000000011100 7
b011 :
1;
b0000000000000000000000000000000000000000000000000000000000100000 <
#86
0;
#91
b00000000000000000000000000111100 D
b00000000000000000000000000110010 E
b0000000000000000000000000000000000000000000000000000000000000101 7
b000 :
1;
b0000000000000000000000000000000000000000000000000000000000001010 <
b01 L
#96
0;
#101
b00000000000000000000000000000101 @
b0000000000000000000000000000000000000000000000000000000000010010 7
b001 :
1;
b0000000000000000000000000000000000000000000000000000000000011000 <
b00000000000000000000000000001010 ?
#106
0;
#111
b00000000000000000000000000010111 @
b0000000000000000000000000000000000000000000000000000000000100011 7
b010 :
1;
b0000000000000000000000000000000000000000000000000000000000101010 <
b00000000000000000000000000100010 ?
#116
0;
#121
b00000000000000000000000000111010 @
b0000000000000000000000000000000000000000000000000000000000111000 7
b011 :
1;
b0000000000000000000000000000000000000000000000000000000001000000 <
b00000000000000000000000001001100 ?
#126
0;
#131
b00000000000000000000000001110010 @
1Q
12
0U
b0000000000000000000000000000000000000000000000000000000000000101 7
19
b000 :
1;
b0000000000000000000000000000000000000000000000000000000000001010 <
b00000000000000000000000000110010 M
b00000000000000000000000010001100 ?
#136
0;
#141
b001 W
b01 *
1;
b001 K
b00000000000000000000000000111100 M
#146
0;
#151
b010 W
b00 *
1;
b010 K
b00000000000000000000000001110010 M
b001 N
#156
0;
#161
b011 W
b01 *
1;
b011 K
b00000000000000000000000010001100 M
#166
0;
#171
1B
b00 *
b100 K
b00000000000000000000000000000000 M
b010 N
10
0Q
02
1V
b100 W
09
1;
#176
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
0;
