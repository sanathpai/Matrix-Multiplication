$date
2024-03-01T20:57+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module MatMulSC $end
 $var wire 32 ! io_in_bits_b_2_0 $end
 $var wire 1 " io_out_valid $end
 $var wire 32 # bReg_3_0 $end
 $var wire 1 $ reset $end
 $var wire 1 % colCounter $end
 $var wire 1 & io_in_valid $end
 $var wire 32 ' io_in_bits_b_1_0 $end
 $var wire 32 ( aReg_0_0 $end
 $var wire 32 ) bReg_2_0 $end
 $var wire 32 * aReg_0_2 $end
 $var wire 32 + aReg_0_1 $end
 $var wire 1 , colIndex $end
 $var wire 32 - aReg_0_3 $end
 $var wire 64 . product $end
 $var wire 32 / io_out_bits_0_0 $end
 $var wire 3 0 kCounter $end
 $var wire 32 1 io_in_bits_b_0_0 $end
 $var wire 1 2 computeDone $end
 $var wire 32 3 bReg_1_0 $end
 $var wire 1 4 rowCounter $end
 $var wire 1 5 clock $end
 $var wire 32 6 io_in_bits_b_3_0 $end
 $var wire 1 7 computing $end
 $var wire 32 8 cReg_0_0 $end
 $var wire 32 9 bReg_0_0 $end
 $var wire 1 : io_in_ready $end
 $var wire 32 ; io_in_bits_a_0_0 $end
 $var wire 32 < io_in_bits_a_0_1 $end
 $var wire 32 = io_in_bits_a_0_2 $end
 $var wire 32 > io_in_bits_a_0_3 $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000000000000000000000000000 +
b00000000000000000000000000000000 *
02
b00000000000000000000000000000000 -
04
b00000000000000000000000000000000 '
05
b00000000000000000000000000000000 )
07
b00000000000000000000000000000000 (
b00000000000000000000000000000000 #
0:
b0000000000000000000000000000000000000000000000000000000000000000 .
b00000000000000000000000000000000 !
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 =
b00000000000000000000000000000000 <
b00000000000000000000000000000000 6
b00000000000000000000000000000000 9
b00000000000000000000000000000000 8
b00000000000000000000000000000000 3
b00000000000000000000000000000000 /
b00000000000000000000000000000000 1
b000 0
b00000000000000000000000000000000 >
0"
0$
0%
0&
0,
$end
#0
1$
1:
#1
15
#6
b00000000000000000000000000000001 !
b00000000000000000000000000000001 1
0$
05
1&
b00000000000000000000000000000001 6
b00000000000000000000000000000001 '
b00000000000000000000000000000001 ;
b00000000000000000000000000000001 <
b00000000000000000000000000000001 =
b00000000000000000000000000000001 >
#11
b00000000000000000000000000000001 #
b00000000000000000000000000000001 (
b00000000000000000000000000000001 )
b00000000000000000000000000000001 *
b00000000000000000000000000000001 +
b00000000000000000000000000000001 -
b0000000000000000000000000000000000000000000000000000000000000001 .
b00000000000000000000000000000001 3
15
17
b00000000000000000000000000000001 9
0:
#16
05
#21
b001 0
15
b00000000000000000000000000000001 8
b00000000000000000000000000000001 /
#26
05
#31
b010 0
15
b00000000000000000000000000000010 8
b00000000000000000000000000000010 /
#36
05
#41
b011 0
15
b00000000000000000000000000000011 8
b00000000000000000000000000000011 /
#46
05
#51
b000 0
1"
12
15
07
b00000000000000000000000000000100 8
1:
b00000000000000000000000000000100 /
#56
b00000000000000000000000000000000 !
b00000000000000000000000000000000 1
05
0&
b00000000000000000000000000000000 6
b00000000000000000000000000000000 '
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
