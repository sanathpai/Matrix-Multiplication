$date
2024-03-01T20:57+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module MatMulSC $end
 $var wire 32 ! io_out_bits_1_2 $end
 $var wire 32 " io_out_bits_1_1 $end
 $var wire 32 # io_out_bits_1_3 $end
 $var wire 32 $ io_out_bits_1_0 $end
 $var wire 32 % io_in_bits_a_1_0 $end
 $var wire 32 & aReg_0_0 $end
 $var wire 32 ' io_out_bits_0_3 $end
 $var wire 32 ( io_out_bits_0_2 $end
 $var wire 32 ) io_out_bits_0_1 $end
 $var wire 32 * io_out_bits_0_0 $end
 $var wire 32 + io_in_bits_a_2_0 $end
 $var wire 1 , kCounter $end
 $var wire 32 - io_in_bits_b_0_3 $end
 $var wire 32 . io_in_bits_b_0_2 $end
 $var wire 32 / io_in_bits_b_0_1 $end
 $var wire 32 0 io_in_bits_b_0_0 $end
 $var wire 1 1 computeDone $end
 $var wire 3 2 rowCounter $end
 $var wire 32 3 bReg_0_3 $end
 $var wire 32 4 bReg_0_2 $end
 $var wire 32 5 bReg_0_1 $end
 $var wire 32 6 bReg_0_0 $end
 $var wire 1 7 io_in_ready $end
 $var wire 32 8 io_in_bits_a_0_0 $end
 $var wire 1 9 io_out_valid $end
 $var wire 32 : cReg_3_0 $end
 $var wire 32 ; cReg_3_1 $end
 $var wire 32 < aReg_3_0 $end
 $var wire 32 = cReg_3_2 $end
 $var wire 32 > cReg_3_3 $end
 $var wire 1 ? reset $end
 $var wire 3 @ colCounter $end
 $var wire 1 A io_in_valid $end
 $var wire 32 B cReg_2_0 $end
 $var wire 32 C cReg_2_1 $end
 $var wire 32 D cReg_2_2 $end
 $var wire 3 E colIndex $end
 $var wire 32 F cReg_2_3 $end
 $var wire 64 G product $end
 $var wire 32 H cReg_1_0 $end
 $var wire 32 I cReg_1_1 $end
 $var wire 32 J cReg_1_2 $end
 $var wire 32 K cReg_1_3 $end
 $var wire 32 L aReg_1_0 $end
 $var wire 32 M io_out_bits_3_0 $end
 $var wire 32 N io_out_bits_3_2 $end
 $var wire 32 O io_out_bits_3_1 $end
 $var wire 1 P clock $end
 $var wire 32 Q io_out_bits_3_3 $end
 $var wire 32 R io_in_bits_a_3_0 $end
 $var wire 32 S cReg_0_1 $end
 $var wire 32 T cReg_0_2 $end
 $var wire 1 U computing $end
 $var wire 32 V cReg_0_3 $end
 $var wire 32 W aReg_2_0 $end
 $var wire 32 X cReg_0_0 $end
 $var wire 32 Y io_out_bits_2_1 $end
 $var wire 32 Z io_out_bits_2_0 $end
 $var wire 32 [ io_out_bits_2_3 $end
 $var wire 32 \ io_out_bits_2_2 $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000000000000000000000000000 +
01
b00000000000000000000000000000000 *
b00000000000000000000000000000000 -
b00000000000000000000000000000000 '
b00000000000000000000000000000000 &
b00000000000000000000000000000000 )
07
b00000000000000000000000000000000 (
b00000000000000000000000000000000 #
09
b00000000000000000000000000000000 "
b00000000000000000000000000000000 %
b00000000000000000000000000000000 $
b00000000000000000000000000000000 !
0?
b00000000000000000000000000000000 ;
0A
b00000000000000000000000000000000 :
b00000000000000000000000000000000 =
b00000000000000000000000000000000 <
b00000000000000000000000000000000 6
b00000000000000000000000000000000 8
b00000000000000000000000000000000 3
b00000000000000000000000000000000 5
b00000000000000000000000000000000 4
b00000000000000000000000000000000 /
b00000000000000000000000000000000 .
b00000000000000000000000000000000 0
0P
0U
b000 E
b000 2
b000 @
b00000000000000000000000000000000 K
b00000000000000000000000000000000 J
b00000000000000000000000000000000 M
b00000000000000000000000000000000 L
b00000000000000000000000000000000 F
b00000000000000000000000000000000 I
b00000000000000000000000000000000 H
b00000000000000000000000000000000 C
b00000000000000000000000000000000 B
b00000000000000000000000000000000 D
b00000000000000000000000000000000 >
b00000000000000000000000000000000 [
b00000000000000000000000000000000 Z
b0000000000000000000000000000000000000000000000000000000000000000 G
b00000000000000000000000000000000 \
b00000000000000000000000000000000 W
b00000000000000000000000000000000 V
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 X
b00000000000000000000000000000000 S
b00000000000000000000000000000000 R
b00000000000000000000000000000000 T
0,
b00000000000000000000000000000000 O
b00000000000000000000000000000000 N
b00000000000000000000000000000000 Q
$end
#0
17
1?
#1
1P
#6
b00000000000000000000000000000001 0
0P
1A
b00000000000000000000000000000001 R
b00000000000000000000000000000001 %
b00000000000000000000000000000001 8
b00000000000000000000000000000001 +
b00000000000000000000000000000001 -
b00000000000000000000000000000001 .
b00000000000000000000000000000001 /
0?
#11
b00000000000000000000000000000001 &
b0000000000000000000000000000000000000000000000000000000000000001 G
b00000000000000000000000000000001 L
1P
b00000000000000000000000000000001 3
b00000000000000000000000000000001 4
b00000000000000000000000000000001 5
1U
b00000000000000000000000000000001 6
07
b00000000000000000000000000000001 W
b00000000000000000000000000000001 <
#16
0P
#21
b001 @
1P
b001 E
b00000000000000000000000000000001 X
b00000000000000000000000000000001 *
#26
0P
#31
b010 @
1P
b00000000000000000000000000000001 S
b010 E
b00000000000000000000000000000001 )
#36
0P
#41
b011 @
1P
b00000000000000000000000000000001 T
b011 E
b00000000000000000000000000000001 (
#46
0P
#51
b000 @
1P
b001 2
b000 E
b00000000000000000000000000000001 V
b00000000000000000000000000000001 '
#56
0P
#61
b001 @
1P
b00000000000000000000000000000001 $
b001 E
b00000000000000000000000000000001 H
#66
0P
#71
b010 @
1P
b00000000000000000000000000000001 "
b010 E
b00000000000000000000000000000001 I
#76
0P
#81
b011 @
1P
b00000000000000000000000000000001 !
b011 E
b00000000000000000000000000000001 J
#86
0P
#91
b000 @
1P
b010 2
b00000000000000000000000000000001 #
b000 E
b00000000000000000000000000000001 K
#96
0P
#101
b001 @
1P
b00000000000000000000000000000001 B
b001 E
b00000000000000000000000000000001 Z
#106
0P
#111
b010 @
1P
b00000000000000000000000000000001 C
b010 E
b00000000000000000000000000000001 Y
#116
0P
#121
b011 @
1P
b00000000000000000000000000000001 D
b011 E
b00000000000000000000000000000001 \
#126
0P
#131
b000 @
1P
b011 2
b000 E
b00000000000000000000000000000001 F
b00000000000000000000000000000001 [
#136
0P
#141
b001 @
1P
b001 E
b00000000000000000000000000000001 :
b00000000000000000000000000000001 M
#146
0P
#151
b010 @
1P
b010 E
b00000000000000000000000000000001 ;
b00000000000000000000000000000001 O
#156
0P
#161
b011 @
1P
b011 E
b00000000000000000000000000000001 =
b00000000000000000000000000000001 N
#166
0P
#171
b000 @
1P
11
b00000000000000000000000000000001 Q
b000 E
0U
17
19
b00000000000000000000000000000001 >
#176
b00000000000000000000000000000000 0
0P
0A
b00000000000000000000000000000000 R
b00000000000000000000000000000000 %
b00000000000000000000000000000000 8
b00000000000000000000000000000000 +
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
